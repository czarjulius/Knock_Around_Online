@model NewKnockaboutonline.Models.PRODUCT

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br /><br /><br /><br /><br /><br /><br />
@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageBg, "Main View", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="file" name="ImageBgFile" />
                        @Html.ValidationMessageFor(model => model.ImageBg, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageSm1, "Left Side View", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="file" name="ImageSm1File" />
                        @Html.ValidationMessageFor(model => model.ImageSm1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageSm2, "Right Side View", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="file" name="ImageSm2File" />
                        @Html.ValidationMessageFor(model => model.ImageSm2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageSm3, "Top View", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="file" name="ImageSm3File" />
                        @Html.ValidationMessageFor(model => model.ImageSm3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageSm4, "Base View", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="file" name="ImageSm4File" />
                        @Html.ValidationMessageFor(model => model.ImageSm4, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <input type="number" class="form-control" name="Price" />
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>
                      )ViewBag.Category, "--Select Category--", htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownList("CategoryId", new SelectList(ViewBag.category, "CategoryId", "Name"), "-- SELECT --")*@
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-4">

                <div class="form-group">
                    @Html.LabelFor(model => model.ColorId, "Color", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownList("ColorId", (IEnumerable<SelectListItem>
                                  )ViewBag.Color, "--Select Color--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ColorId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.StorageId, "Storage", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownList("StorageId", (IEnumerable<SelectListItem>
                                  )ViewBag.Storage, "--Select Storage--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StorageId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SizeId, "Size", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownList("SizeId", (IEnumerable<SelectListItem>
                                  )ViewBag.Size, "--Select Size--", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SizeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.IsNew, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.IsNew, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IsNew, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-dark" />
            </div>
        </div>
    </div>
}
